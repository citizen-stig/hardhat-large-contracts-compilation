// SPDX-License-Identifier: AML
//
// Copyright 2017 Christian Reitwiessner
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to
// deal in the Software without restriction, including without limitation the
// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
// sell copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
// IN THE SOFTWARE.

// 2019 OKIMS

pragma solidity ^0.8.9;


import "./Pairing.sol";

contract InboundTransfer100 {
    using Pairing for *;

    uint256 constant PRIME_Q = 21888242871839275222246405745257275088696311157297823662689037894645226208583;

    struct VerifyingKey {
        Pairing.G1Point alfa1;
        Pairing.G2Point beta2;
        Pairing.G2Point gamma2;
        Pairing.G2Point delta2;
    }

    struct Proof {
        Pairing.G1Point A;
        Pairing.G2Point B;
        Pairing.G1Point C;
    }

    function verifyingKey() internal pure returns (VerifyingKey memory vk) {
        vk.alfa1 = Pairing.G1Point(uint256(15271730360612196710597353550022709990344932011892432339344709156129914285791), uint256(3154832332506957063091714135159097741405400921612719263538736483328081143196));
        vk.beta2 = Pairing.G2Point([uint256(12448959640543515652073742762562276070741493508464257717548669786026437232329), uint256(14140912119326484444516688074055469881689953705382999145834619987230895662338)], [uint256(19835268916011416234532805822792964702307333992681436144864168872074462751466), uint256(588651694955444900346876638866814124932208371333487259953566989974629503225)]);
        vk.gamma2 = Pairing.G2Point([uint256(13161531016683760950203983040430516908735255514573943270362364980407792369488), uint256(12347503206110796731207380461744226924414522751439299711368850969803349749760)], [uint256(4487585537339612812477036082505826526226118534843022833573284360378407905096), uint256(14451364752431162616796671254298731283495214324675489342311344170678521948106)]);
        vk.delta2 = Pairing.G2Point([uint256(13684725429077076176170716737997379172230548513068058744168093011400089667732), uint256(15573336205744742176633906579313948952261681886768262801312255162002103689244)], [uint256(15102011992036306970950622885156611337199223518963847741125414905191863523222), uint256(2991882324434495960330206479463143905167830618161993191890197232028103855441)]);
        return vk;
    }

    /*
     * @returns Whether the proof is valid given the hardcoded verifying key
     *          above and the public inputs
     */
    function verifyProof(
        uint256[2] memory a,
        uint256[2][2] memory b,
        uint256[2] memory c,
        uint256[] memory input
    ) public view returns (bool r) {
        require(input.length == 104, "Proof has incorrect size");

        Proof memory proof;
        proof.A = Pairing.G1Point(a[0], a[1]);
        proof.B = Pairing.G2Point([b[0][0], b[0][1]], [b[1][0], b[1][1]]);
        proof.C = Pairing.G1Point(c[0], c[1]);

        // Make sure that proof.A, B, and C are each less than the prime q
        require(proof.A.X < PRIME_Q, "verifier-aX-gte-prime-q");
        require(proof.A.Y < PRIME_Q, "verifier-aY-gte-prime-q");

        require(proof.B.X[0] < PRIME_Q, "verifier-bX0-gte-prime-q");
        require(proof.B.Y[0] < PRIME_Q, "verifier-bY0-gte-prime-q");

        require(proof.B.X[1] < PRIME_Q, "verifier-bX1-gte-prime-q");
        require(proof.B.Y[1] < PRIME_Q, "verifier-bY1-gte-prime-q");

        require(proof.C.X < PRIME_Q, "verifier-cX-gte-prime-q");
        require(proof.C.Y < PRIME_Q, "verifier-cY-gte-prime-q");

        VerifyingKey memory vk = verifyingKey();

        // Compute the linear combination vk_x
        Pairing.G1Point memory vk_x = Pairing.G1Point(0, 0);
        Pairing.G1Point memory cur = Pairing.G1Point(0, 0);

        // Make sure that every input is less than the snark scalar field
        cur = Pairing.G1Point(
            uint256(7935561773167544407175274386283677364387778547173368465059060577688923479010),
            uint256(18659633442154813954658847234310382555864322604293798469843740202103236608640));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[0]));
        cur = Pairing.G1Point(
            uint256(9934091205542854536002645601837820337649776290517330090973585123326588788887),
            uint256(13146645497799319597028422758636275101241376051561582220452227110016850484344));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[1]));
        cur = Pairing.G1Point(
            uint256(6726972895793720066908940387359921683334496453664239024849032817451021614155),
            uint256(1183449531747131367324877388002424477845591582334459569055211694551693463585));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[2]));
        cur = Pairing.G1Point(
            uint256(8298246397166479455233102534862772173162248472450705687332318294385188123155),
            uint256(16679483509252737069553274035256691076450178163310037609642742761175067179585));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[3]));
        cur = Pairing.G1Point(
            uint256(13000324796472801400107277920193996770016469625878304055157114019254070257443),
            uint256(7708180868802879335443532783850030077207402142397699123524253209381774842077));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[4]));
        cur = Pairing.G1Point(
            uint256(17006485548884087509122132278171850712866908409928424223497203296719636093316),
            uint256(17990695878232966143337462993185800152584915940303146910448279999385025284138));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[5]));
        cur = Pairing.G1Point(
            uint256(21615998646530888685010809479640739928817393410570123436330951588881343743737),
            uint256(13308065986584479664126838430111776818010060416083733441747775540445476087063));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[6]));
        cur = Pairing.G1Point(
            uint256(7226714815938038082739604851210768473612116771236022521472574569817800902959),
            uint256(3424576029920716144368214332056495136151103940458370831194569598181924851626));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[7]));
        cur = Pairing.G1Point(
            uint256(14669171958800452025738313242884860268265883005897321492101607810262767202343),
            uint256(15928731898657569639891137556326306990709368462292710422805034365984970436253));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[8]));
        cur = Pairing.G1Point(
            uint256(6541352371321042124750770628999963861430481402386133945469551362851557194386),
            uint256(8878251556958570528174983039700976269198918237990299644685765093385630940387));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[9]));
        cur = Pairing.G1Point(
            uint256(20562580810225298193554918138106817612222686524766187257448759859279788607597),
            uint256(2317326862077604475566272560315743237629704248030750893246429719173738581089));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[10]));
        cur = Pairing.G1Point(
            uint256(3179359854268167624846085084513002999594368367438384346304365305333158724979),
            uint256(9831204702846905836696698770442927857390893170015051551889168288103964310802));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[11]));
        cur = Pairing.G1Point(
            uint256(2684321593320811218114167030688064012447576496323008726260309335971713554868),
            uint256(3069973766454915656710783654545479375746832363048235994110891658194854927341));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[12]));
        cur = Pairing.G1Point(
            uint256(1128592898957537259008421741024945512074376429925379179045022131193645186265),
            uint256(8975510288127476652473752975133212925470940380484466022273319458522873435544));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[13]));
        cur = Pairing.G1Point(
            uint256(14967442881277810691545514679000595690678535604320938983291355097980706046822),
            uint256(9176512291555246203012532438956448332530409448179926032829277904879849770299));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[14]));
        cur = Pairing.G1Point(
            uint256(12285058681519942727031163379122781582157078402986111639746585382457984998778),
            uint256(18063570838147491733573791572566870371714170140775310569801852874810960579425));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[15]));
        cur = Pairing.G1Point(
            uint256(10260607863056035677860114578044230131845509786902902341330958485757869451200),
            uint256(21376000947149736151015838372730344491403033139812682936831756625653473469811));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[16]));
        cur = Pairing.G1Point(
            uint256(15277338841601196066543976678778497688005197471867247302129531624055897184820),
            uint256(19507574746199449987019114565554950632566829791973890712356376687633088072718));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[17]));
        cur = Pairing.G1Point(
            uint256(204494266486745775727304356214866803707438673985741556533463390629538020913),
            uint256(12973798116991036492714200611817069161695065674269164133866474161115266828727));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[18]));
        cur = Pairing.G1Point(
            uint256(19204307333949863777903333938653035457667905079729288343564743031771481489953),
            uint256(10923599904540999446544427131689643379999539126622341066092515221868724087351));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[19]));
        cur = Pairing.G1Point(
            uint256(5808508258761455580558691185067445699259735107534724573748137207137259078551),
            uint256(17505047540920771853773588336441702970195312680267837797042723230725440368621));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[20]));
        cur = Pairing.G1Point(
            uint256(16515315187742431428556480417426347919890429389028001595422991952503228285799),
            uint256(10159787145257012203140124830213086635558316125185429482768183437639573477094));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[21]));
        cur = Pairing.G1Point(
            uint256(5940417026918866631179283367189871222156816720323669956005922740293453469032),
            uint256(19377285269150537676762604600624833221007754152841690595356345940320581205314));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[22]));
        cur = Pairing.G1Point(
            uint256(1860251851148403705273316513273139994141809984992888232801425422662416869206),
            uint256(13064860202564108381373812666206358142891561279463259314863427568656876768103));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[23]));
        cur = Pairing.G1Point(
            uint256(12356324193199640287300260157543969262896616287339725095832861790663358016170),
            uint256(1983133044357092706133274754258096410800081083766260192598454254582669094351));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[24]));
        cur = Pairing.G1Point(
            uint256(17924283370342709999836012221324229585749295087939473969922735900672445544122),
            uint256(1697113520677615931330031904900622316689757709816383751612137405446738570110));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[25]));
        cur = Pairing.G1Point(
            uint256(10506132442748808070454087515152968003044300313888031255639418734084919632639),
            uint256(16224891316226799512206978675546252809836921956259217092687738663007241023024));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[26]));
        cur = Pairing.G1Point(
            uint256(11533028915246276828596015109017331844368382164397076617432288709136625380952),
            uint256(7382122567616484502106988572826560295520371763907204739063908563732838207224));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[27]));
        cur = Pairing.G1Point(
            uint256(18477711827854078140563369260948024068226801316419025652454940646671253038574),
            uint256(5212933647324844570652206541672410019541782192823175595832878506764591392279));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[28]));
        cur = Pairing.G1Point(
            uint256(1068149310156456453669481490771179857623748662194981814117606186788408135358),
            uint256(671300709319161528091426708465999285971372811329651933209652868682749712240));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[29]));
        cur = Pairing.G1Point(
            uint256(3237353180592134975627534071665879309119574210250693118934746019074076005516),
            uint256(20028067956799785166775257070587405048171562743014788960061149238438457870191));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[30]));
        cur = Pairing.G1Point(
            uint256(9216592492100307428521329534569652958893450072374643655840068908132099201185),
            uint256(6210190254485156605504401321309341875667830921770241293597695289681238552166));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[31]));
        cur = Pairing.G1Point(
            uint256(7511373728037928157023966700931065651675941626418551919736582807840550991567),
            uint256(17571798352015998204133397457435566133118374920721219992195611643709198459679));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[32]));
        cur = Pairing.G1Point(
            uint256(8733874293742244085879132030759546942978812317120130872557845007687309992658),
            uint256(3332164227173138688620621045155088087922561625435739486659799577506814659794));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[33]));
        cur = Pairing.G1Point(
            uint256(234279950116906260945289220810284222816781243699434018555052652114025825226),
            uint256(9399419625716743710031127265028773787105936954801399197558942369255721358105));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[34]));
        cur = Pairing.G1Point(
            uint256(529112839916470749041294808980963258814305889384671498454756680284160623103),
            uint256(19646479197521543138032466043598345894342857245861744941036105699159100453873));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[35]));
        cur = Pairing.G1Point(
            uint256(11276679434991381808429398697145989975475716748522703173702488428475919607333),
            uint256(20142128446131272384108372116480642897213152728399599729877421396333777684677));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[36]));
        cur = Pairing.G1Point(
            uint256(9172831686418256463578227925123713009899296950066682071413323561706648903156),
            uint256(20441358024199940493451317562369003314267080393167282450286904712190066308334));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[37]));
        cur = Pairing.G1Point(
            uint256(15086051151916319101266685935486965601994802347242858934945515240405257029269),
            uint256(1550126006701197971216446756605739074033250208083193233391877199592695669431));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[38]));
        cur = Pairing.G1Point(
            uint256(2997591285743200776388932814048186883498862510286848221374342617960655886644),
            uint256(2592016981288418280431009660929696047923358863179873058135629606856671884303));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[39]));
        cur = Pairing.G1Point(
            uint256(1910201999218954669929873015479689927370760215474127866961107642282466554263),
            uint256(47761327091404894532906228202580848290734547552935332702252685858192543368));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[40]));
        cur = Pairing.G1Point(
            uint256(20584287368871238777957515215246453963475198590751120980577666710588573952530),
            uint256(16551923412680536025192983946161161040825056051125154811494702947057165046589));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[41]));
        cur = Pairing.G1Point(
            uint256(12455314635078353265706867408094533424978461772689728109899452029005323952388),
            uint256(11258811823546062217169807548826326231221422571674653451196362778229765259746));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[42]));
        cur = Pairing.G1Point(
            uint256(18519131930667298911117158195635807522407120094574750193867733344124674853557),
            uint256(6924934949946180106430742496466235150926004708305056047480141682762672381840));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[43]));
        cur = Pairing.G1Point(
            uint256(13796567129073277358562140832985169640853467307093810655878114979241286819098),
            uint256(21037636690616505092600091490194506881637746173782799979330475005355291690029));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[44]));
        cur = Pairing.G1Point(
            uint256(18033450299087857330033619093449652750139788559866092278928139945528851192466),
            uint256(2180831608288311481633354411220149621444680147345240393199871467984425996821));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[45]));
        cur = Pairing.G1Point(
            uint256(14996768244954946562718738808843605581438018937080101425784640064183209780005),
            uint256(14996631149965238079733924297667572106627527869894981195976456963590492481926));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[46]));
        cur = Pairing.G1Point(
            uint256(19674941641756258016332704624820071091103029340926461213056568470326013585745),
            uint256(19305408025921676303689898479688672160019816792858044522835527918197472386491));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[47]));
        cur = Pairing.G1Point(
            uint256(8701606374952945973891138718651510458147391534858004484459545481346327491),
            uint256(6403896439765750555873797359030197198500881251843779242193537928896822580057));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[48]));
        cur = Pairing.G1Point(
            uint256(16296300837280492269401333941945790403462263951565601790507022336405665288276),
            uint256(16579945603475210533797304419136352909401351833438547523188906193395049918325));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[49]));
        cur = Pairing.G1Point(
            uint256(16290858723331923245025540955834323189316882367197023270370683227629204800431),
            uint256(20141261836735324964566456740352718179843213030000664204231314322193151010179));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[50]));
        cur = Pairing.G1Point(
            uint256(6164065023042450964376665484315518451078053811872697600208064419256137830985),
            uint256(6026482533828454360341398468764452002647779100597666215249441825165491837908));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[51]));
        cur = Pairing.G1Point(
            uint256(17009706174326909630748989663838233036021549242576361012041714515114090771077),
            uint256(11466887435993671304785001059661344745373529421539137266614171240337866757788));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[52]));
        cur = Pairing.G1Point(
            uint256(21218517031691374109343394863363562535696653526996795376118165065578006445405),
            uint256(815364508236162628487520054205486834324859532543145942483268860057270864856));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[53]));
        cur = Pairing.G1Point(
            uint256(12116850708649553197744938433730405321748210313711022091869066670187092042856),
            uint256(6613802270702096227030582813320291209249719106518803574375557199172682035757));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[54]));
        cur = Pairing.G1Point(
            uint256(17712982246257130094142367282849341554426360574492442506482321312466303768711),
            uint256(5529242223623537493714927924160546906420260878455070539038890228381755797543));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[55]));
        cur = Pairing.G1Point(
            uint256(16385638524372562036466871204229290688350151516620223473975101812371020369584),
            uint256(17118140093856510449523211125712962741301962450293244257511029155970352839689));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[56]));
        cur = Pairing.G1Point(
            uint256(10917204468007039586375503208587231151326628028608573688470566842019573799857),
            uint256(19364008120933495040357244696832422640221124810381862996363197622164747633024));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[57]));
        cur = Pairing.G1Point(
            uint256(4290310892846442369790101527592519965502569953313514416301355486729962906885),
            uint256(14142227426582137445076893865378816078711798553519464343272594615671001839235));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[58]));
        cur = Pairing.G1Point(
            uint256(8010886581588299305657360877321701419038953328214402125164372388455903305708),
            uint256(7516079204141613444712111819455674671355619423871486749450352277386313220951));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[59]));
        cur = Pairing.G1Point(
            uint256(1698544089920458819896165446201971978618323539371073872244551784897247682732),
            uint256(6677562170663240925123195272996561332166891238489196834182276607073961886378));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[60]));
        cur = Pairing.G1Point(
            uint256(10415147138166533470715705845286754401473186664890327831902306065903047366814),
            uint256(751761114174552068978436282155865214013206995280669397312606624101619349339));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[61]));
        cur = Pairing.G1Point(
            uint256(1870418149549117430974839820152937890326295164035323349808552936873688477685),
            uint256(8052397079470894709566139585372152472111572124504188631268953687969900348908));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[62]));
        cur = Pairing.G1Point(
            uint256(19589847513589046351368419467054281165166175344398638353477843419739254115207),
            uint256(1627831311122517473039104110784699565123522527520335172939316419447578168943));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[63]));
        cur = Pairing.G1Point(
            uint256(20456600908108427639202824833072684427691877024687423427212597075677220467937),
            uint256(18018034082357373616849668414148375986821741290681417252505593464507392401834));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[64]));
        cur = Pairing.G1Point(
            uint256(21341697311531339280605024141165153009612199923098824325500389053091506314634),
            uint256(20107895218122467091810986397992322049932970339526653012654464395489830080536));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[65]));
        cur = Pairing.G1Point(
            uint256(5693374028170857730968415058100707339954710688859703945577875280382717308644),
            uint256(4182967956691152137634519744838550351208321257679847472234333754375061798464));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[66]));
        cur = Pairing.G1Point(
            uint256(1543009684419514478706479778820022061846474367520525535707387525474370281491),
            uint256(7397939725407534344189179781003854340814901627691478745072079600948999053688));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[67]));
        cur = Pairing.G1Point(
            uint256(18063886810613389546798384293655182958460108115430046200996625378000439591668),
            uint256(16144224929317980347036747950342288780622317088807648758161348685573885098907));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[68]));
        cur = Pairing.G1Point(
            uint256(19354418630579611217271267105381168916953714983531224815762384244822805468582),
            uint256(18567389186483169632349044779368371349154556211253573264317724515968618275288));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[69]));
        cur = Pairing.G1Point(
            uint256(17085581556507314565369536459427690818357168179717528798595521370210860293646),
            uint256(13664648806243663023941666759975008618981755869485998077944164846767789874513));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[70]));
        cur = Pairing.G1Point(
            uint256(5726589772008410257562834567776747546994583494261691423766239659739264894950),
            uint256(11264670554319337321687558622174258514656276650267029067588125475380020563636));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[71]));
        cur = Pairing.G1Point(
            uint256(7054630768795956344208190603669959004659120155978564970688695476167736962495),
            uint256(5736308609814663034447620196455949962055694618233085628613164597389962391551));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[72]));
        cur = Pairing.G1Point(
            uint256(18518610243204170539209973225159808145547776793311577902599826395328536468793),
            uint256(5479630749976289609133269709489653832763415220927281448444917825826169361254));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[73]));
        cur = Pairing.G1Point(
            uint256(17687613412481751532135965670943248466816328023970153838181871556824997174702),
            uint256(12391244751739369596063478267248596847014905211992453098874933544720205961440));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[74]));
        cur = Pairing.G1Point(
            uint256(1838534791101564518515337700725596192993158092231403220549283809736500045588),
            uint256(18334778959872373996778705419274552680771422658553766599870043958431331577814));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[75]));
        cur = Pairing.G1Point(
            uint256(18918008844201880400452681341859369987125265712182826185934134974079690339711),
            uint256(2417132895871393709569429176944107928452910849906786532980417466720064521937));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[76]));
        cur = Pairing.G1Point(
            uint256(568566216241278415998280017811707919676047137344212684060081614230905699273),
            uint256(17605819300617180292073638170512577319965354044337876709605560362202692370084));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[77]));
        cur = Pairing.G1Point(
            uint256(10431878959100070156656126178595316904471972275665261451726458829737716262882),
            uint256(1310390535383242940216687232936555674114911965690076548734330633540538798412));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[78]));
        cur = Pairing.G1Point(
            uint256(10026903722760540735703591110831022837646952025131807709355407851573531263928),
            uint256(1543385486215156248840257937893431768181581329292123693781864639754566307979));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[79]));
        cur = Pairing.G1Point(
            uint256(17634990760362359509375949613253076564836395314540247874184579434676519037336),
            uint256(6697236088958724337398410205585002050575544199723591670466286556345268800027));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[80]));
        cur = Pairing.G1Point(
            uint256(21735219280364091897098357413006722140142955440776370502911162262504581201880),
            uint256(9366910326497613993418877153239157376881919194949168094461937617288637370417));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[81]));
        cur = Pairing.G1Point(
            uint256(6420108128046949393463880703826268604691313146040487108171048578823978183955),
            uint256(5653316266771236840681729820421527951781696905899863207912620170922523186979));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[82]));
        cur = Pairing.G1Point(
            uint256(3560125163699330511591132375185878651709942923284619030583564896952719422292),
            uint256(5241087554196898699826853692229710970990796019337523778416726953397073932186));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[83]));
        cur = Pairing.G1Point(
            uint256(12584878949098804157249530324738591722997870909672494373770841464179759794772),
            uint256(14518056401272871584091951474993081616736904125983360351561918861145731554802));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[84]));
        cur = Pairing.G1Point(
            uint256(10722298724490335160169077821693503542867505303258429899841672873555129011745),
            uint256(16938038934716184773555687240032253067459641441727149146034350845212307658050));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[85]));
        cur = Pairing.G1Point(
            uint256(461728563336452219413026112339511258813988677668228455240762177416755544326),
            uint256(19049769037513687784197327778610519156953228926735874121511266905244193117970));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[86]));
        cur = Pairing.G1Point(
            uint256(21149437102555479268942378183059574249576548256189280690766444845725071073199),
            uint256(8055110129064642397324714023060111686923594946855122723193758062973654103794));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[87]));
        cur = Pairing.G1Point(
            uint256(20361761588068310720424992277303076402733082485225765159125365322193267581290),
            uint256(12933952087320803200256084532429013664946169667976689616855480256430606463477));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[88]));
        cur = Pairing.G1Point(
            uint256(3599960932495117704764635067037231250637992127354014976053184720644176736332),
            uint256(13876122469743104441210066639001372575182512409297786692376654821370751156732));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[89]));
        cur = Pairing.G1Point(
            uint256(1505810623997921845322511628910445407630546128493072215025915001525972336857),
            uint256(4750088140534548042384196356383285169185782437125556618897698232154718106008));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[90]));
        cur = Pairing.G1Point(
            uint256(16931477473508354163396433355215791470686765135912928783758808448761645320218),
            uint256(7199174757026425330399972904229542474794365325749626008522884726043621413970));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[91]));
        cur = Pairing.G1Point(
            uint256(11608651384962156954282518377602705534263250284080501216920164856617201962479),
            uint256(1977518041155321309462874112557446223025696641795571171383435778850409873127));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[92]));
        cur = Pairing.G1Point(
            uint256(20647686604275252162009896740853456098640068451503089837417026209886589251287),
            uint256(21466406582713912118290064254426016872648655161925828426826143287634653158079));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[93]));
        cur = Pairing.G1Point(
            uint256(19188205598468483806030080741305328006530960796613733266769778273732090413435),
            uint256(13514039860310984083294140661782750506072282177337262709608804318835562536037));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[94]));
        cur = Pairing.G1Point(
            uint256(5291444259493069423500350174663876340166309594591623252076678798357781874379),
            uint256(13282938818819599681156748762794084610782206199985648313441503251673148841875));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[95]));
        cur = Pairing.G1Point(
            uint256(11978717537948966027325541508232032731453696087173701092713004038694303414667),
            uint256(28906494376192869915286862908803689492117961356327667944293317353577057069));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[96]));
        cur = Pairing.G1Point(
            uint256(16345839100725063995971653674137458887340558024293686255460839978042779124034),
            uint256(16391562813678284833522025055797163242589576524004250939368273458963303117829));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[97]));
        cur = Pairing.G1Point(
            uint256(16263039343539618834853812725380790697121841637110421390273254251563340511613),
            uint256(21218972169702586710017034695101673089107666983882179914830466528776964239713));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[98]));
        cur = Pairing.G1Point(
            uint256(2506280071684378827086742421288790054367012018612040563391637326707763460653),
            uint256(12012253877118953236770317677876735097414532208348628351178428232847746335760));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[99]));
        cur = Pairing.G1Point(
            uint256(5366669218598991167469281526436394698973495827664889537242732064367870495597),
            uint256(13778423646472220722630059632894104114513371627489730357640881976181074669485));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[100]));
        cur = Pairing.G1Point(
            uint256(15558738397071787670534290555034474192969057135799506155146581764201498074322),
            uint256(5519442673352549291585203591119938001912500668942635945021362654266542017543));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[101]));
        cur = Pairing.G1Point(
            uint256(16246968606169332627701878299531862068633390660395795526356214206418846179924),
            uint256(4247008904840867664710432338772582005431461880521455752590242318032291112984));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[102]));
        cur = Pairing.G1Point(
            uint256(21812936631035331717388751615457155243931711964172118430755589572066000398301),
            uint256(6675071675679321283298857552697600040282868175244678425997340063060554374397));
        vk_x = Pairing.plus(vk_x, Pairing.scalar_mul(cur, input[103]));
        cur = Pairing.G1Point(
            uint256(17497367814574792553182656289260221197522690692845006639784037528380609588690),
            uint256(1925347814361112848137740451653581342431312368434744896712632348987923824477));
        vk_x = Pairing.plus(vk_x, cur);

        return Pairing.pairing(
            Pairing.negate(proof.A),
            proof.B,
            vk.alfa1,
            vk.beta2,
            vk_x,
            vk.gamma2,
            proof.C,
            vk.delta2
        );
    }
}
